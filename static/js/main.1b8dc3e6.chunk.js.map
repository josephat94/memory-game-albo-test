{"version":3,"sources":["features/counter/Counter.module.css","logo.svg","features/counter/counterSlice.js","helpers/constants.js","helpers/axios-interceptor.js","reducers/main.js","components/loading/Loading.js","components/memoryFinished/MemoryFinished.js","components/welcome/genreCard.js","components/welcome/Welcome.js","components/gameInit/card.png","components/gameInit/Card.js","components/gameInit/GameInit.js","App.js","serviceWorker.js","store/store.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","apiConstants","axios","defaults","headers","common","baseURL","interceptors","request","use","config","console","log","url","includes","error","Promise","reject","response","data","mainSlice","genreSelected","loading","movies","card1Selected","card2Selected","allFound","genreName","genres","setGenres","chooseGenre","genreFound","find","genre","id","setLoading","setMovies","originalMovies","slice","concat","shuffleArray","map","movie","poster","poster_path","title","isFlipped","found","reset","flipCard","index","allCorrect","searchAllFound","res","undefined","sort","Math","random","selectGenres","main","selectGenreName","selectGenre","selectAllFound","selectLoading","selectMovies","selectCard1","selectCard2","Loading","props","show","text","Modal","size","centered","Body","className","Spinner","animation","MemoryFinished","Footer","Button","onClick","onReset","GenreCard","Col","xs","sm","md","lg","Card","onCardClick","style","margin","height","border","cursor","Title","Welcome","useSelector","dispatch","useDispatch","useEffect","a","get","resp","SearchMovies","results","overflowY","Row","MovieCard","onClickCard","xl","flipped","overflow","src","cardImage","GameInit","App","path","length","to","Boolean","window","location","hostname","match","configureStore","reducer","mainReducer","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b8dc3e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1uu_8\",\"value\":\"Counter_value__nnZhE\",\"button\":\"Counter_button__3NLJ_\",\"textbox\":\"Counter_textbox__9mJw2\",\"asyncButton\":\"Counter_asyncButton__cufqM Counter_button__3NLJ_\"};","export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","export const apiConstants={\r\n    baseUrl: \"https://api.themoviedb.org/3/\",\r\n    apiString: \"api_key=c4d6352e9bf08cd4945872a0b1a8af7d&language=es\"\r\n}","import axios from 'axios';\r\nimport { apiConstants } from './constants';\r\n\r\n\r\naxios.defaults.headers.common = { 'Accept': 'application/json', 'Content-Type': 'application/json' }\r\n\r\n\r\naxios.defaults.baseURL = apiConstants.baseUrl\r\n\r\naxios.interceptors.request.use(function (config) {\r\n\r\n    console.log(config)\r\n    if(config.url.includes(\"?\")){\r\n        config.url=config.url+\"&\"+apiConstants.apiString+\r\n        console.log(config); \r\n    }else{\r\n        config.url=config.url+\"?\"+apiConstants.apiString;\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n    // Any status code range of 2xx\r\n    return response.data;\r\n}, function (error) {\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nexport default axios;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const mainSlice = createSlice({\r\n  name: \"main\",\r\n  initialState: {\r\n    value: 0,\r\n    genreSelected: null,\r\n    loading: false,\r\n    movies: [],\r\n    card1Selected: null,\r\n    card2Selected: null,\r\n    allFound: false,\r\n    genreName: null,\r\n    genres: [],\r\n\r\n  },\r\n  reducers: {\r\n    setGenres: (state, action) => {\r\n      \r\n      state.genres = action.payload;\r\n    },\r\n    chooseGenre: (state, action) => {\r\n    let genreFound= state.genres.find(genre=>genre.id=action.payload)\r\n    state.genreName= genreFound.name;\r\n      state.genreSelected = action.payload;\r\n    },\r\n    setLoading: (state) => {\r\n      state.loading = !state.loading;\r\n    },\r\n\r\n    setMovies: (state, action) => {\r\n      let originalMovies = action.payload.slice(0, 13);\r\n\r\n      originalMovies = originalMovies.concat(originalMovies);\r\n      originalMovies = shuffleArray(originalMovies);\r\n      state.loading = false;\r\n\r\n      state.movies = originalMovies.map((movie) => ({\r\n        id: movie.id,\r\n        poster: movie.poster_path,\r\n        title: movie.title,\r\n        isFlipped: false,\r\n        found: false,\r\n      }));\r\n    },\r\n    reset: (state) => {\r\n      state.genreSelected = null;\r\n      state.loading = false;\r\n      state.movies = [];\r\n      state.card1Selected = null;\r\n      state.card2Selected = null;\r\n      state.allFound = false;\r\n      state.genres=[]\r\n    },\r\n\r\n    flipCard: (state, action) => {\r\n      //Aqui se va a voltear una card por su id\r\n\r\n      if (state.card1Selected == null && state.card2Selected == null) {\r\n        state.card1Selected = action.payload;\r\n      } else {\r\n        if (state.card1Selected != null && state.card2Selected == null) {\r\n          if (action.payload != state.card1Selected) {\r\n            state.card2Selected = action.payload;\r\n          }\r\n        } else {\r\n          if (state.card1Selected != null && state.card1Selected != null) {\r\n            if (action.payload != state.card1Selected) {\r\n              state.card1Selected = action.payload;\r\n              state.card2Selected = null;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let movies = state.movies.map((movie, index) => {\r\n        if (index == state.card1Selected || index == state.card2Selected) {\r\n          movie.isFlipped = true;\r\n        } else {\r\n          if (movie.found == false) {\r\n            movie.isFlipped = false;\r\n          }\r\n        }\r\n        return movie;\r\n      });\r\n\r\n      console.log(state.card1Selected, state.card2Selected);\r\n      if (state.card1Selected != null && state.card2Selected != null) {\r\n        console.log(\r\n          \"Si se seleccionaron 2 cards\",\r\n          state.card1Selected,\r\n          state.card2Selected\r\n        );\r\n        if (movies[state.card1Selected].id == movies[state.card2Selected].id) {\r\n          movies[state.card1Selected].found = true;\r\n          movies[state.card2Selected].found = true;\r\n        }\r\n      }\r\n\r\n      //* Se busca si ya no falta ninguna card pareja por aparecer en el tablero\r\n      let allCorrect = searchAllFound(movies);\r\n      console.log(allCorrect);\r\n      let res = false;\r\n      if (allCorrect == true) {\r\n        res = true;\r\n      }\r\n\r\n      state.movies = movies;\r\n      state.allFound = res;\r\n    },\r\n  },\r\n});\r\n\r\nconst searchAllFound = (movies) => {\r\n  if (movies.find((movie) => movie.found == false) == undefined) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nconst shuffleArray = (movies) => {\r\n  let newMovies = movies.sort(() => Math.random() - 0.5);\r\n\r\n  return newMovies;\r\n};\r\nexport const {\r\n  chooseGenre,\r\n  setLoading,\r\n  setMovies,\r\n  flipCard,\r\n  reset,\r\n  setGenres,\r\n} = mainSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount) => (dispatch) => {\r\n  setTimeout(() => {\r\n    //   dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectGenres = (state) => state.main.genres;\r\nexport const selectGenreName=state=>state.main.genreName;\r\nexport const selectGenre = (state) => {\r\n  return state.main.genreSelected;\r\n};\r\nexport const selectAllFound = (state) => state.main.allFound;\r\nexport const selectLoading = (state) => state.main.loading;\r\nexport const selectMovies = (state) => state.main.movies;\r\nexport const selectCard1 = (state) => state.main.card1Selected;\r\nexport const selectCard2 = (state) => state.main.card2Selected;\r\nexport default mainSlice.reducer;\r\n","import  Modal from \"react-bootstrap/Modal\"\r\nimport React from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nconst Loading =props=>{\r\nconst {show, text}= props;\r\n\r\n    return(\r\n        <Modal\r\n        size=\"md\"\r\n        show={show}\r\n       centered={true}\r\n      >\r\n        <Modal.Body className=\" pt-5 pb-5 d-flex justify-content-center align-items-center\">\r\n\r\n        <Spinner animation=\"border\" className=\"mr-4\" />\r\n         {text}\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading;","import Modal from \"react-bootstrap/Modal\";\r\nimport React from \"react\";\r\n\r\nimport { Button } from \"react-bootstrap/\";\r\nconst MemoryFinished = (props) => {\r\n  const { show, text } = props;\r\n\r\n  return (\r\n    <Modal size=\"md\" show={show} centered={true}>\r\n      <Modal.Body className=\"d-flex justify-content-center align-items-center pt-5 pb-5\">\r\n        <h2>{text}</h2>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button onClick={()=>{\r\n            props.onReset();\r\n        }}>Volver a jugar</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MemoryFinished;\r\n","import React from \"react\";\r\nimport { Card, Col } from \"react-bootstrap\";\r\n\r\nconst GenreCard = (props) => {\r\n  return (\r\n   <Col xs={12} sm={12} md={4} lg={2}> \r\n      <Card onClick={()=>{props.onCardClick(props.id)}} className=\" anima-bounce-in \" style={{margin:\"1rem\", height: \"10rem\", border:\"1px solid #efefef\", cursor:\"pointer\" }}>\r\n      <Card.Body className=\" onHover w-100 h-100 d-flex align-items-center justify-content-center\"> \r\n        <Card.Title>{props.name}</Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n   </Col>\r\n\r\n  );\r\n};\r\n\r\nexport default GenreCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport axios from \"../../helpers/axios-interceptor\";\r\nimport {\r\n  chooseGenre,\r\n  selectAllFound,\r\n  selectGenre,\r\n  selectGenres,\r\n  selectLoading,\r\n  setGenres,\r\n  setLoading,\r\n  setMovies,\r\n} from \"../../reducers/main\";\r\nimport Loading from \"../loading/Loading\";\r\nimport MemoryFinished from '../memoryFinished/MemoryFinished';\r\nimport GenreCard from \"./genreCard\";\r\nconst Welcome = (props) => {\r\n\r\n\r\n  const genreSelected = useSelector(selectGenre);\r\n  const genres= useSelector(selectGenres);\r\n  const loading = useSelector(selectLoading);\r\n \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let resp = await axios.get(\"/genre/movie/list\");\r\n        // console.log(resp);\r\n        dispatch(setGenres(resp.genres));\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\nuseEffect(()=>{\r\n  console.log(genres);\r\n},[genres])\r\n\r\n  useEffect(() => {\r\n    if (genreSelected != null) {\r\n      SearchMovies();\r\n    }\r\n  }, [genreSelected]);\r\n\r\n  const SearchMovies = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.themoviedb.org/3/discover/movie?language=es&page=1&with_genres=\" +\r\n          genreSelected\r\n      );\r\n\r\n      dispatch(setMovies(response.results));\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch(setLoading());\r\n    }\r\n  };\r\n\r\n  const onCardClick = (genre) => {\r\n    dispatch(setLoading());\r\n    dispatch(chooseGenre(genre));\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{overflowY:\"auto\", height:\"100vh\"}}> \r\n        <h1>Memoria de película!</h1>\r\n        <h3>Selecciona un género para comenzar</h3>\r\n        <h1>{genreSelected}</h1>\r\n    \r\n        <br></br>\r\n        <Row  className=\"d-flex flex-wrap justify-content-center\">\r\n          {genres.map((genre) => {\r\n            return (\r\n              <GenreCard\r\n              className=\"onHover\"\r\n                onCardClick={onCardClick}\r\n                id={genre.id}\r\n                key={\"id-genre-\" + genre.id}\r\n                name={genre.name}\r\n              ></GenreCard>\r\n            );\r\n          })}\r\n        </Row>\r\n      </div>\r\n\r\n      <Loading show={loading} text={\"Cargando Juego\"}></Loading>\r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","export default __webpack_public_path__ + \"static/media/card.617a7e5e.png\";","import React, { useState } from \"react\";\r\nimport { Card, Col } from \"react-bootstrap\";\r\nimport Flipcard from \"@kennethormandy/react-flipcard\";\r\nimport cardImage from './card.png'\r\nconst MovieCard = (props) => {\r\n    const {id, isFlipped, onClickCard, index,found, poster}= props;\r\n  \r\n  return (\r\n      <Col xs={6} md={3} lg={2} xl={1}>\r\n\r\n<div\r\n    className={found?\"found onHover card-game\":\"onHover card-game\"}\r\n   \r\n \r\n    >\r\n      <Flipcard\r\n      className=\"w-100 h-100\"\r\n      flipped={isFlipped}>\r\n        <Card\r\n        className=\"movie-card\"\r\n          onClick={() => {\r\n            onClickCard(index)\r\n            //  props.onCardClick(props.id);\r\n          }}\r\n          className=\" anima-bounce-in special-card w-100 h-100 \"\r\n        >\r\n          <Card.Body className=\"p-0 w-100 h-100 bg-primary\" style={{overflow: 'hidden'}}>\r\n          <img className=\"h-100 w-100\" src={cardImage}></img>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card\r\n          onClick={() => {\r\n              if(found==false){\r\n                onClickCard(index)\r\n              }\r\n           \r\n            //  props.onCardClick(props.id);\r\n          }}\r\n          className=\"onHover anima-bounce-in special-card  \"\r\n          className=\"movie-card\"\r\n        >\r\n          <Card.Body className=\"p-0\" style={{overflow: 'hidden'}}>\r\n            <img className=\"h-100 w-100\" src={`https://image.tmdb.org/t/p/w185${props.poster}`}></img>\r\n          </Card.Body>\r\n        </Card>\r\n      </Flipcard>\r\n    </div>\r\n\r\n      </Col>\r\n  \r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { flipCard, reset, selectAllFound, selectCard1, selectCard2, selectGenreName, selectMovies } from \"../../reducers/main\";\r\nimport MemoryFinished from \"../memoryFinished/MemoryFinished\";\r\nimport MovieCard from \"./Card\";\r\nconst GameInit = (props) => {\r\n  const movies = useSelector(selectMovies);\r\n  const card1Selected= useSelector(selectCard1)\r\n  const card2Selected= useSelector(selectCard2)\r\n  const allFound= useSelector(selectAllFound);\r\n  const genreName= useSelector(selectGenreName);\r\nconst dispatch= useDispatch();\r\n\r\n  const onClickCard=(id)=>{\r\n\r\n    dispatch(flipCard(id));\r\n  }\r\n  const onReset=()=>{\r\n      dispatch(reset())\r\n  }\r\n  return (\r\n    <div className=\"h-100 w-100 bg-secondary\">\r\n        <br></br>\r\n      <h3>Género {genreName}</h3>\r\n\r\n      <Row className=\"w-100 d-flex flex-wrap justify-content-center movies-ctn align-items-center m-0 \">\r\n        {movies.map((movie, index) => {\r\n          return (\r\n            <MovieCard\r\n            poster={movie.poster}\r\n            found={movie.found}\r\n            onClickCard={onClickCard} index={index} isFlipped={movie.isFlipped} id={movie.id} key={\"movie\" + movie.id+ \"key-\"+ index} name={movie.title}></MovieCard>\r\n          );\r\n        })}\r\n      </Row>\r\n\r\n      <MemoryFinished onReset={onReset} show={allFound} text={\"Felicidades!! Lo has conseguido\"}></MemoryFinished>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameInit;\r\n","import React, { useEffect } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.css\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Welcome from \"./components/welcome/Welcome\";\r\nimport GameInit from \"./components/gameInit/GameInit\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGenre, selectMovies } from \"./reducers/main\";\r\n\r\nfunction App() {\r\n  const movies = useSelector(selectMovies);\r\n  const genreSelected = useSelector(selectGenre);\r\n\r\n\r\n  return (\r\n    <div className=\"App bg-secondary\">\r\n      {/*       <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <Counter />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <span>\r\n          <span>Learn </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            React\r\n          </a>\r\n          <span>, </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://redux.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Redux\r\n          </a>\r\n          <span>, </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://redux-toolkit.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Redux Toolkit\r\n          </a>\r\n          ,<span> and </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://react-redux.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            React Redux\r\n          </a>\r\n        </span>\r\n      </header> */}\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/memory\">\r\n            {movies.length > 0 && genreSelected ? (\r\n              <GameInit></GameInit>\r\n            ) : (\r\n              <Redirect to=\"/\" />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {movies.length > 0 && genreSelected ? (\r\n              <Redirect to=\"/memory\" />\r\n            ) : (\r\n              <Welcome></Welcome>\r\n            )}\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\"></Redirect>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mainReducer from '../reducers/main';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    main: mainReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport '@kennethormandy/react-flipcard/dist/Flipcard.css'\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from './store/store';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}